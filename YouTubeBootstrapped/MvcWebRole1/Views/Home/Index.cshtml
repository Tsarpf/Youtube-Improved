@model YOUTUBEiMPROVED.Models.YoutubeResults

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link type="text/css" href="~/jquery-bootstrap/assets/css/bootstrap.min.css" rel="stylesheet" />
    <link type="text/css" href="~/jquery-bootstrap/css/custom-theme/jquery-ui-1.10.0.custom.css" rel="stylesheet" />
    <link type="text/css" href="~/jquery-bootstrap/assets/css/font-awesome.min.css" rel="stylesheet" />
    <link type="text/css" href="~/jquery-bootstrap/assets/css/docs.css" rel="stylesheet" />
    <link type="text/css" href="~/jquery-bootstrap/assets/js/google-code-prettify/prettify.css" rel="stylesheet" />

    <title>YouTube ImProved</title>
</head>
<body>
    @if(Model != null)
	{
        if(Model.titles != null && Model.videoIDs != null)
		{
            for(int i = 0; i < 2; i++)
            {

                <div id="mainVideoDiv@(i)" class="well" style="z-index: @(i*-1); position:absolute; width: 670px; height: 550px; top: 20px; left:5px;">

                    <div id="videoTitle@(i)" class="well" style="position: absolute; left:30px;"></div>

                    <div id="videoDiv@(i)" class="well"> Loading....</div> <!-- Set style in createNewPlayer in YouTubeHandler.js since it overrides this -->

                    <div id="v-slider@(i)" class="v-slider" style="position:absolute; right:7px; top:85px; height:360px; width:20px;"></div>

                    <div id="h-slider@(i)" class="h-slider" style="position:absolute; left:30px; right:0px; top:460px; height:20px; width:640px"></div>


                    <div class="well" style="position:absolute; left:30px; top:495px; width:375px;">
                        <button onClick="buttonPrevClicked()" class="btn btn-large"><i class="icon-step-backward"></i> Prev</button>
                        <button onClick="buttonStopClicked()" class="btn btn-large"><i class="icon-stop"></i> Stop</button>
                        <button onClick="buttonPauseClicked()" class="btn btn-large"><i class="icon-pause"></i> Pause</button>
                        <button onClick="buttonPlayClicked()" class="btn btn-large"><i class="icon-play"></i> Play</button>
                        <button onClick="buttonNextClicked()" class="btn btn-large"><i class="icon-step-forward"></i> Next</button>
                    </div>

                </div>
            }
        
            <div id="accordion" style="position:absolute; top: 650px; width: 670px; height: @(Model.titles.Count*50)px">
                @for (int i = 0; i < Model.thumbnailURLs.Count; i++)
                {
					<div class="group" style="zoom: 1;">
                        <h3 class="well">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@(i+1) @Model.titles[i]</h3>
                        <div>
                            <div>                                <img src="@Model.thumbnailURLs[i]"/>
                                @Model.descriptions[i]
                            </div>
                        </div>
                    </div>
                }
			</div>
		
            <script src="~/Scripts/jquery-1.9.1.min.js"> </script>
            <script src="~/jquery-bootstrap/assets/js/bootstrap.min.js"></script>
            <script src="~/jquery-bootstrap/assets/js/jquery-ui-1.10.0.custom.min.js"></script>
            <script src="~/Scripts/YouTubeHandler.js"></script>
            <script src="~/Scripts/swfobject.js"></script>
            <script src="~/Scripts/JQueryStuff.js"></script>
            <script src="~/Scripts/PlayerButtonFunctionality.js"></script>

        	<script type="text/javascript">
        	    $('#accordion').accordion({
        	        header: "> div > h3",
        	        collapsible: true,
                    active: false,
                    heightStyle: "content"
                })
                .sortable({
                    axis: "y",
                    handle: "h3",
                    stop: function (event, ui) {
                        // IE doesn't register the blur when sorting
                        // so trigger focusout handlers to remove .ui-state-focus
                        console.log("stopped draggin yo");

                        ui.item.children("h3").triggerHandler("focusout");
                    }
                  });
            </script>
		
		

                for(int i = 0; i < Model.videoIDs.Count; i++)
				{
                    <script type="text/javascript">
                        videoList.push("@Model.videoIDs[i]");
                        titleList.push("@Model.titles[i]");
                    </script>
				}

                <script type="text/javascript">
                    createNewPlayer(0);
                    createNewPlayer(1);

                    hidePlayer(1);
                    //document.getElementById("mainVideoDiv1").style.left = "2000px";
                    document.getElementById("videoTitle0").innerHTML = titleList[0];


                </script>
		
		
		}
	}
    else
	{
        using (Html.BeginForm())
        {
            
              <style>
                  body {
                    min-width: 800px;
                    max-width: 800px;
                    margin: 0 auto;

                  }

                #header {
                    text-align: center;
                    color: black;
                    font-size: 18px;
                    font-family: 'Comic Sans MS';
                }
                #welcome {
                    text-align:center;
                    color: black;
                    font-size: 14px;
                    font-family: 'Comic Sans MS';
                }
              
            </style>
        
            <p id="header">Welcome to Youtube Improved!</p>
            <br />
            <p id="welcome">You have found a student project from Helsinki University's Windows Azure course. Our project was to design, code and implement some sort of program or website for Windows Azure 
                for learning purposes. We decided our goal to be to create a website which transforms YouTube, a commonly known video-service to become easy-to-use music player with possibility to have users 
                register their own usernames and save their own playlists for later use. You can try it out yourself by either typing your favourite song on the search-box below or just trying your luck 
                with empty search-parameters. <br /> <br />Hope you enjoy!
            </p>
        
            <div style="margin: auto; width:200px;">
                Get top 10 tracks from an artist: @Html.TextBoxFor(x => x.searchString)
                <p></p>
                <input type="submit" value="Search" style="margin: 0 auto; width:70px; display: block;" class="button ui-button-primary" />     
            </div>
		    /*
		    <div style="margin: auto; width:200px;">
                Get something else
		    </div>
		    */
            <script src="~/Scripts/jquery-1.9.1.min.js"> </script>
            <script src="~/jquery-bootstrap/assets/js/bootstrap.min.js"></script>
            <script src="~/jquery-bootstrap/assets/js/jquery-ui-1.10.0.custom.min.js"></script>
		
		    <script type="text/javascript">
                $('.button').button();
            </script>
        }
	}
</body>
</html>
