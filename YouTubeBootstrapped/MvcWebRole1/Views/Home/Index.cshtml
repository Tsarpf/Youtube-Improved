@model YOUTUBEiMPROVED.Models.YoutubeResults

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link type="text/css" href="~/jquery-bootstrap/assets/css/bootstrap.min.css" rel="stylesheet" />
    <link type="text/css" href="~/jquery-bootstrap/css/custom-theme/jquery-ui-1.10.0.custom.css" rel="stylesheet" />
    <link type="text/css" href="~/jquery-bootstrap/assets/css/font-awesome.min.css" rel="stylesheet" />
    <link type="text/css" href="~/jquery-bootstrap/assets/css/docs.css" rel="stylesheet" />
    <link type="text/css" href="~/jquery-bootstrap/assets/js/google-code-prettify/prettify.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-1.9.1.min.js"> </script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript" ></script>

    <title>YouTube++ deluxe gold collectors edition</title>
</head>
<body>




    @if(Model.titles != null && Model.videoIDs != null)
    {
        for(int i = 0; i < 2; i++)
        {

            <div id="mainVideoDiv@(i)" class="well" style="z-index: @(i*-1); position:absolute; width: 670px; height: 550px; top: 20px; left:5px;">

                <div id="videoTitle@(i)" class="well" style="position: absolute; left:30px;"></div>

                <div id="videoDiv@(i)" class="well"> Loading....</div> <!-- Set style in createNewPlayer in YouTubeHandler.js since it overrides this -->

                <div id="v-slider@(i)" class="v-slider" style="position:absolute; right:7px; top:85px; height:360px; width:20px;"></div>

                <div id="h-slider@(i)" class="h-slider" style="position:absolute; left:30px; right:0px; top:460px; height:20px; width:640px"></div>


                <div class="well" style="position:absolute; left:30px; top:495px; width:375px;">
                    <button onClick="buttonPrevClicked()" class="btn btn-large"><i class="icon-step-backward"></i> Prev</button>
                    <button onClick="buttonStopClicked()" class="btn btn-large"><i class="icon-stop"></i> Stop</button>
                    <button onClick="buttonPauseClicked()" class="btn btn-large"><i class="icon-pause"></i> Pause</button>
                    <button onClick="buttonPlayClicked()" class="btn btn-large"><i class="icon-play"></i> Play</button>
                    <button onClick="buttonNextClicked()" class="btn btn-large"><i class="icon-step-forward"></i> Next</button>
                </div>

            </div>
        }
    
        <div id="accordion" style="position:absolute; top: 650px; width: 670px; height: @(Model.titles.Count*50)px">
            @for (int i = 0; i < Model.thumbnailURLs.Count; i++)
            {
                <div class="group" style="zoom: 1;">
                    <h3 class="well">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@(i+1) @Model.titles[i]</h3>
                    <div>
                        <div>
                            <img src="@Model.thumbnailURLs[i]"/>
                            @Model.descriptions[i]
                        </div>
                    </div>
                </div>
            }
        </div>
    

        <script src="~/jquery-bootstrap/assets/js/bootstrap.min.js"></script>
        <script src="~/jquery-bootstrap/assets/js/jquery-ui-1.10.0.custom.min.js"></script>
        <script src="~/Scripts/YouTubeHandler.js"></script>
        <script src="~/Scripts/swfobject.js"></script>
        <script src="~/Scripts/JQueryStuff.js"></script>
        <script src="~/Scripts/PlayerButtonFunctionality.js"></script>


    
        <script type="text/javascript">
            $('#accordion').accordion({
                header: "> div > h3",
                collapsible: true,
                active: false,
                heightStyle: "content"
            })
            .sortable({
                axis: "y",
                handle: "h3",
                stop: function (event, ui) {
                    // IE doesn't register the blur when sorting
                    // so trigger focusout handlers to remove .ui-state-focus
                    console.log("stopped draggin yo");

                    ui.item.children("h3").triggerHandler("focusout");
                }
              });
        </script>
    
    

            for (int i = 0; i < Model.videoIDs.Count; i++)
            {
                <script type="text/javascript">
                    videoList.push("@Model.videoIDs[i]");
                    titleList.push("@Model.titles[i]");
                </script>
            }

            <script type="text/javascript">
                createNewPlayer(0);
                createNewPlayer(1);

                hidePlayer(1);
                //document.getElementById("mainVideoDiv1").style.left = "2000px";
                document.getElementById("videoTitle0").innerHTML = titleList[0];


            </script>
    
    
    }
	else
	{
		using (Html.BeginForm())
		{
            
              <style>
                  body {
                    min-width: 800px;
                    max-width: 800px;
                    margin: 0 auto;

                  }
            </style>
        

        
            <div style="margin: auto; width:200px;">
                Search by Artist: @Html.TextBoxFor(x => x.artistSearchString, new { id = "artistBox" })
                <p></p>
                <input type="submit" value="Search" style="margin: 0 auto; width:70px; display: block;" class="button ui-button-primary" />     
            </div>
            <p></p>
            <p></p>
            <div style="margin: auto; width:200px;">
                Normal Search: @Html.TextBoxFor(x => x.normalSearchString, new { id = "normalBox" })
                <p></p>
                <input type="submit" value="Search" style="margin: 0 auto; width:70px; display: block;" class="button ui-button-primary" />
            </div>
		
		
            <script src="~/Scripts/jquery-1.9.1.min.js"> </script>
            <script src="~/jquery-bootstrap/assets/js/bootstrap.min.js"></script>
            <script src="~/jquery-bootstrap/assets/js/jquery-ui-1.10.0.custom.min.js"></script>
		
		    <script type="text/javascript">
                $('.button').button();
                $('#artistBox').click(function () {
                    $('#normalBox').val('');
                });

                $('#normalBox').click(function () {
                    $('#artistBox').val('');
                });
            </script>
        }
	}

    @if(Model.correct == null || Model.correct == false)
	{

        <div id="testDiv" style="position:absolute; right:100px;">
            <p id="ajaxTextArea" style="right:0px"></p>
        </div>
        
		using (Ajax.BeginForm("Index", "Home", new AjaxOptions {}, new { id = "ajaxForm" }))
        {
                <text>Username: </text> @Html.TextBoxFor(x => x.username, new { id = "usernameBox", style="left:50px" });
                <text>Password: </text> @Html.PasswordFor(x => x.password, new { id = "passwordBox", style="left:0px"});
                <input type="submit" value="Login" />
		
		

	    }
    }

    <script type="text/javascript">
        $(function () {
            $('#ajaxForm').submit(function () {

                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        $('#ajaxTextArea').html(result + " penis");
                    }
                });
            });
        });
    </script>


</body>
</html>
